package com.mini.venta.entities;

// Generated Jan 15, 2013 11:21:45 AM by Hibernate Tools 3.6.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Cliente generated by hbm2java
 */
@Entity
@Table(name = "CLIENTE")
public class Cliente implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	
	private Long idCliente;
	private Departamento departamento;
	private Provincia provincia;
	private Distrito distrito;
	private TipoCliente tipoCliente;
	private String nombre;
	private String apellido;
	private Date fecha;
	private String EMail;
	private String telefono;
	private String celular;
	private String direccionNegocio;
	private String ruc;
	private String dni;
	private String razonSocial;
	private Character estado;
	private Set<NotaPedido> notaPedidos = new HashSet<NotaPedido>(0);

	public Cliente() {
	}

	public Cliente(Departamento departamento, Provincia provincia,
			Distrito distrito, TipoCliente tipoCliente) {
		this.departamento = departamento;
		this.provincia = provincia;
		this.distrito = distrito;
		this.tipoCliente = tipoCliente;
	}

	public Cliente(Departamento departamento, Provincia provincia,
			Distrito distrito, TipoCliente tipoCliente, String nombre,
			String apellido, Date fecha, String EMail, String telefono,
			String celular, String direccionNegocio, String ruc,
			String razonSocial, Character estado, Set<NotaPedido> notaPedidos) {
		this.departamento = departamento;
		this.provincia = provincia;
		this.distrito = distrito;
		this.tipoCliente = tipoCliente;
		this.nombre = nombre;
		this.apellido = apellido;
		this.fecha = fecha;
		this.EMail = EMail;
		this.telefono = telefono;
		this.celular = celular;
		this.direccionNegocio = direccionNegocio;
		this.ruc = ruc;
		this.razonSocial = razonSocial;
		this.estado = estado;
		this.notaPedidos = notaPedidos;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "ID_CLIENTE", unique = true, nullable = false)
	public Long getIdCliente() {
		return this.idCliente;
	}

	public void setIdCliente(Long idCliente) {
		this.idCliente = idCliente;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "ID_DEPARTAMENTO", nullable = false)
	public Departamento getDepartamento() {
		return this.departamento;
	}

	public void setDepartamento(Departamento departamento) {
		this.departamento = departamento;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "ID_PROVINCIA", nullable = false)
	public Provincia getProvincia() {
		return this.provincia;
	}

	public void setProvincia(Provincia provincia) {
		this.provincia = provincia;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "ID_DISTRITO", nullable = false)
	public Distrito getDistrito() {
		return this.distrito;
	}

	public void setDistrito(Distrito distrito) {
		this.distrito = distrito;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "ID_TIPO_CLIENTE", nullable = false)
	public TipoCliente getTipoCliente() {
		return this.tipoCliente;
	}

	public void setTipoCliente(TipoCliente tipoCliente) {
		this.tipoCliente = tipoCliente;
	}

	@Column(name = "NOMBRE", length = 50)
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@Column(name = "APELLIDO", length = 50)
	public String getApellido() {
		return this.apellido;
	}

	public void setApellido(String apellido) {
		this.apellido = apellido;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "FECHA", length = 19)
	public Date getFecha() {
		return this.fecha;
	}

	public void setFecha(Date fecha) {
		this.fecha = fecha;
	}

	@Column(name = "E_MAIL", length = 50)
	public String getEMail() {
		return this.EMail;
	}

	public void setEMail(String EMail) {
		this.EMail = EMail;
	}

	@Column(name = "TELEFONO", length = 7)
	public String getTelefono() {
		return this.telefono;
	}

	public void setTelefono(String telefono) {
		this.telefono = telefono;
	}

	@Column(name = "CELULAR", length = 9)
	public String getCelular() {
		return this.celular;
	}

	public void setCelular(String celular) {
		this.celular = celular;
	}

	@Column(name = "DIRECCION_NEGOCIO", length = 100)
	public String getDireccionNegocio() {
		return this.direccionNegocio;
	}

	public void setDireccionNegocio(String direccionNegocio) {
		this.direccionNegocio = direccionNegocio;
	}

	@Column(name = "RUC", length = 11)
	public String getRuc() {
		return this.ruc;
	}

	public void setRuc(String ruc) {
		this.ruc = ruc;
	}

	@Column(name = "DNI", length = 8)
	public String getDni() {
		return this.dni;
	}
	
	public void setDni(String dni) {
		this.dni = dni;
	}
	
	@Column(name = "RAZON_SOCIAL", length = 100)
	public String getRazonSocial() {
		return this.razonSocial;
	}

	public void setRazonSocial(String razonSocial) {
		this.razonSocial = razonSocial;
	}

	@Column(name = "ESTADO", length = 1)
	public Character getEstado() {
		return this.estado;
	}

	public void setEstado(Character estado) {
		this.estado = estado;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "cliente")
	public Set<NotaPedido> getNotaPedidos() {
		return this.notaPedidos;
	}

	public void setNotaPedidos(Set<NotaPedido> notaPedidos) {
		this.notaPedidos = notaPedidos;
	}

}
