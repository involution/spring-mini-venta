package com.mini.venta.entities;

// Generated Jan 15, 2013 11:21:45 AM by Hibernate Tools 3.6.0

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.CascadeType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * NotaPedido generated by hbm2java
 */
@Entity
@Table(name = "NOTA_PEDIDO")
public class NotaPedido implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	
	private Long idNpedido;
	private Cliente cliente;
	private BigDecimal total;
	private Date fecha;
	private Set<Venta> ventas = new HashSet<Venta>(0);
	private Set<NotaPedidoProducto> notaPedidoProductos = new HashSet<NotaPedidoProducto>(0);

	public NotaPedido() {
	}

	public NotaPedido(Cliente cliente) {
		this.cliente = cliente;
	}

	public NotaPedido(Cliente cliente, BigDecimal total, Date fecha,
			Set<Venta> ventas, Set<NotaPedidoProducto> notaPedidoProductos) {
		this.cliente = cliente;
		this.total = total;
		this.fecha = fecha;
		this.ventas = ventas;
		this.notaPedidoProductos = notaPedidoProductos;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "ID_NPEDIDO", unique = true, nullable = false)
	public Long getIdNpedido() {
		return this.idNpedido;
	}

	public void setIdNpedido(Long idNpedido) {
		this.idNpedido = idNpedido;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "ID_CLIENTE", nullable = false)
	public Cliente getCliente() {
		return this.cliente;
	}

	public void setCliente(Cliente cliente) {
		this.cliente = cliente;
	}

	@Column(name = "TOTAL", precision = 10)
	public BigDecimal getTotal() {
		return this.total;
	}

	public void setTotal(BigDecimal total) {
		this.total = total;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "FECHA", length = 19)
	public Date getFecha() {
		return this.fecha;
	}

	public void setFecha(Date fecha) {
		this.fecha = fecha;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "notaPedido")
	public Set<Venta> getVentas() {
		return this.ventas;
	}

	public void setVentas(Set<Venta> ventas) {
		this.ventas = ventas;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "notaPedidoProductoId.notaPedido", cascade=CascadeType.ALL)
	public Set<NotaPedidoProducto> getNotaPedidoProductos() {
		return this.notaPedidoProductos;
	}

	public void setNotaPedidoProductos(
			Set<NotaPedidoProducto> notaPedidoProductos) {
		this.notaPedidoProductos = notaPedidoProductos;
	}

}
